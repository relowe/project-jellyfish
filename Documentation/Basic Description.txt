// This is a basic description of what the code should do

###############################
##   GENERAL RULES OF THUMB  ##
###############################

1 - This langugage is STRONGLY typed
    * The only two types are NUMBER (float) and TEXT 
    * There is also the "nothing" type

2 - This langugage has NO OBJECTS (at least for now)

3 - Users can define their own types (like a C struct)

4 - No confusing sigils

##################################
##           STRUCTURES         ##
##################################

All lines in this program are per-line (like python)
  - there are no line ending sigils

The global program is defined in two sections:
  - a definition section for functions and global variables
  - a program section for the main body of the code

"""
  definitions
    ...
  end definitions
  program
    ...
  end program
"""

All structured elements are in the form:
  - "keyword"
  - (the body of the structure)
  - "end keyword"

Functions are in the form:
    function <name> ( <args> ) returns < type >
      ...
    end function

############################
## LOOPS AND CONDITIONALS ##
############################

"""
while < condition >
  ...
end while

if < condition >
  ...
end if

if < condition >
  ...
else
  ...
end if

if < condition >
  ...
else if < condition >
  ...
else
  ...
end if

repeat
  ...
end repeat

repeat < number > times
  ...
end repeat




#########################
##     FUNCTIONS       ##
#########################

"""
function < name > ( <args> ) returns < number | text | nothing >
  ..
end function
"""

 - All arguments are passed by-value (no references, a direct copy needs to be made)


##############################
##   VARIABLES AND ARRAYS   ##
##############################

"""
< name > : < number | text >
< name > , < name >, < name > : < number | text >
< name > , ... : < number | text > = < value >
"""

*Variables CANNOT change type, and types CANNOT be coerced

"""
< name > : array [ < size > ] of < number | text >
< name > : array [ < size > , < size > ..., < size > ] of < number | text >
"""

*Arrays start indexing at 1, and can be multi-dimensional

"""
< name >[< index >]
"""
This is how you index the array

** Number types CAN start with just a period


#################################
##     OPERATORS (AND OOp)     ##
#################################

Priority   | Symbol     | Description 
======================================
1          | ()         | Parenthesis
( postfix would go here )
( prefix and "bitwise not" would go here )
2          | not        | Not 
3          | ^          | Pow 
4          | *          | Multipy 
4          | /          | Divide 
4          | %          | Modulo
5          | +          | Add 
5          | -          | Subtract 
6          | SL         | Shift Left
6          | SR         | Shift Right
7          | <          | Less Than
7          | >          | Greater Than 
7          | <=         | Less Than or Equal 
7          | >=         | Greater Than or Equal 
8          | =          | Equal
8          | !=         | Not Equal 
9          | &          | Bitwise And
10         | ^          | Bitwise XOR
11         | |          | Bitwise Or 
12         | and        | And 
13         | or         | Or 
14         | =          | Assignment

